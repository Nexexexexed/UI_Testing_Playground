import React, { useState } from "react";
import CodeBlock from "../../Common/CodeBlock";

const MouseOver: React.FC = () => {
  const [hoverState, setHoverState] = useState<string>("–ù–∏ –Ω–∞ —á—Ç–æ –Ω–µ –Ω–∞–≤–µ–¥–µ–Ω–æ");

  const handleMouseEnter = (elementName: string) => {
    setHoverState(`–ù–∞–≤–µ–¥–µ–Ω–æ –Ω–∞: ${elementName}`);
  };

  const handleMouseLeave = () => {
    setHoverState("–ù–∏ –Ω–∞ —á—Ç–æ –Ω–µ –Ω–∞–≤–µ–¥–µ–Ω–æ");
  };

  const codeSnippets = [
    {
      language: "javascript",
      code: `// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ hover —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
const element = await page.locator('#hover-element-1');
await element.hover();
const state = await page.textContent('#hover-state');
expect(state).toContain('–ù–∞–≤–µ–¥–µ–Ω–æ –Ω–∞: –≠–ª–µ–º–µ–Ω—Ç 1');`,
    },
    {
      language: "python",
      code: `# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ hover —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
element = page.locator('#hover-element-1')
element.hover()
state = page.text_content('#hover-state')
assert '–ù–∞–≤–µ–¥–µ–Ω–æ –Ω–∞: –≠–ª–µ–º–µ–Ω—Ç 1' in state`,
    },
    {
      language: "javascript",
      code: `// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Å mouse events
await page.locator('#hover-element-1').dispatchEvent('mouseover');`,
    },
  ];

  return (
    <div className="example-container">
      <h2>–ù–∞–≤–µ–¥–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞</h2>
      <p>
        –≠–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è—é—Ç —Å–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        –∫—É—Ä—Å–æ—Ä–∞ –º—ã—à–∏. –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è
        –∏–º–∏—Ç–∞—Ü–∏–∏ hover —Å–æ–±—ã—Ç–∏–π.
      </p>

      <div className="example-area">
        <div className="hover-state-display">
          <div id="hover-state" className="state-indicator">
            {hoverState}
          </div>
        </div>

        <div className="hover-elements">
          <div
            id="hover-element-1"
            className="hover-element"
            onMouseEnter={() => handleMouseEnter("–≠–ª–µ–º–µ–Ω—Ç 1")}
            onMouseLeave={handleMouseLeave}
          >
            üü¶ –≠–ª–µ–º–µ–Ω—Ç 1
          </div>

          <div
            id="hover-element-2"
            className="hover-element"
            onMouseEnter={() => handleMouseEnter("–≠–ª–µ–º–µ–Ω—Ç 2")}
            onMouseLeave={handleMouseLeave}
          >
            üü® –≠–ª–µ–º–µ–Ω—Ç 2
          </div>

          <div
            id="hover-element-3"
            className="hover-element"
            onMouseEnter={() => handleMouseEnter("–≠–ª–µ–º–µ–Ω—Ç 3")}
            onMouseLeave={handleMouseLeave}
          >
            üü• –≠–ª–µ–º–µ–Ω—Ç 3
          </div>
        </div>

        <div className="hover-instructions">
          <p>–ù–∞–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å–æ—Ä –Ω–∞ —Ü–≤–µ—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤—ã—à–µ</p>
        </div>
      </div>

      <div className="code-section">
        <h3>–ü—Ä–∏–º–µ—Ä—ã —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–¥–∞</h3>
        {codeSnippets.map((snippet, index) => (
          <CodeBlock
            key={index}
            language={snippet.language}
            code={snippet.code}
          />
        ))}
      </div>
    </div>
  );
};

export default MouseOver;
